
# [filesink]
# retain_hours = 1 

# [logstash]
# host = "localhost:8888"

# [elastic]
# addresses = ["https://host.domain.com:1234"]
# username = "dev-user"
# password = "horsebatterysomethingsomething"
# default_index = "dev-sql"

# event_index_map = [
#     "login:dev-sql"
# ]

[app]
workers = 4 # max number of concurrent workers.  Defaults to the number of cores
summary = true # prints a summary of events to stdout after running
samples = true # prints one of each type event to samples.xe.json after running

adds = [    "global.host:$(HOST)",  # $(VAR) must be upper case.  the resulting value is lower case.
            "global.app:$(EXE)" 
            ]
copies = [  "@timestamp:newtimestamp" ]
moves = [ ] 

[defaults]
sessions = ["system_health", "AlwaysOn_health"]
look_back = "168h" # one week
rows = 20000 # Process batches of 20000 at a time.  a good compromise.  0 or omitted processes all the rows
timestamp_field_name = "@timestamp"
payload_field_name = "mssql" # all the XE events are under this field
agentjobs = "all" # (all|failed|none) - process SQL Server agent job history
excludedEvents = [
    "connectivity_ring_buffer_recorded",
    "memory_broker_ring_buffer_recorded",
    "scheduler_monitor_system_health_ring_buffer_recorded",
    "security_error_ring_buffer_recorded"
    ]

adds = [    "global.collector:$(EXE)", # $(VAR) must be upper case.  the resulting value is lower case.
            "global.collector.version:$(VERSION)",
            "global.logtype:sqlxe" 
            ]
copies = [  "mssql.timestasmp:newtimestamp",
            "mssql.server_instance_name:global.host" 
            ]
moves = [ ] 


[[source]]
fqdn = "localhost"

[[ source ]]
fqdn = "host.domain.com"
#
# Can repeat any field in the defaults for each source
# These fields overwrite defaults
# Except that adds, copies, and moves are merged
#


[applog]
# logstash = "D30:8888"
timestamp_field_name = "@timestamp"
payload_field_name = "event" # all app fields will be nested under this field.  Optional.
samples = true # prints the JSON application logging messaegs to samples.applog.json





